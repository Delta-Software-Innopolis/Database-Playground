name: Deploy via SSH with Docker Compose

on:
  push:
    branches: [main, pre-chroma]

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend-37
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install frontend deps
        run: npm install --force
      
      - name: Run ESLint
        run: npm run lint
        
      - name: Run Prettier
        run: npm run format

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/core 
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          
      - name: Install backend deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 isort
      
      - name: Run isort
        run: isort --check-only .
        
      - name: Run flake8
        run: flake8 .
        
      - name: Run tests
        run: cd .. && ./scripts/run_tests.sh

  deploy:
    if: github.repository == 'slant14/Database-Playground'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
        shell: bash

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_IP }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Deploy to server via SSH
        run: |
          ssh -i ~/.ssh/deploy_key -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_IP }} << 'EOF'
            set -e
            cd ~/Database-Playground
            git pull origin main
            docker compose build
            docker compose up -d
          EOF
        shell: bash
